AWSTemplateFormatVersion: 2010-09-09
Description: Create Minimal requirements for InfraPipe
Parameters:
  InfraPipeEnv:
    Type: String
    Default: dev
    Description: Please enter the environment alias.
  InfraPipeIamUsername:
    Type: String
    Default: terraform
    Description: Please enter the name of IAM user for the pipeline.
  InfraPipeIamPath:
    Type: String
    Default: /pipeline/
    Description: Please enter the path for IAM roles and groups with beginning and ending with '/'.
  InfraPipeSsmPath:
    Type: String
    Default: security/pipeline
    Description: Please enter the path for SSM parameters without beginning and ending '/'.
Resources:
  InfraPipeIamUser:
    Type: 'AWS::IAM::User'
    Properties:
      Path:
        Ref: InfraPipeIamPath
      UserName: !Ref InfraPipeIamUsername
      Tags:
        - Key: Name
          Value: !Ref InfraPipeIamUsername
  InfraPipeIamUserPolicy:
    Type: 'AWS::IAM::Policy'
    Properties:
      PolicyName: InfraPipeIamUserPolicy-SSMReadonly
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Action: ssm:GetParameters
            Effect: Allow
            Resource: !Sub 'arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${InfraPipeSSMParamPipelineRole}'
      Users:
        - !Ref InfraPipeIamUser
  InfraPipeIamRolePolicyFullAdmin:
    Type: 'AWS::IAM::Policy'
    Properties:
      PolicyName: InfraPipeIamRolePolicy-FullAdmin
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Action: '*'
            Effect: Allow
            Resource: '*'
      Roles:
        - !Ref InfraPipeIamRole
  InfraPipeIamRolePolicyAssumePipelineRole:
    Type: 'AWS::IAM::Policy'
    Properties:
      PolicyName: InfraPipeIamRolePolicy-AssumePipelineRole
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - 'sts:AssumeRole'
            Resource:
              - !GetAtt InfraPipeIamRole.Arn
      Roles:
        - !Ref InfraPipeIamRole
  InfraPipeIamRole:
    Type: 'AWS::IAM::Role'
    Properties:
      RoleName: Pipeline-ops
      Path:
        Ref: InfraPipeIamPath
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              AWS: !GetAtt InfraPipeIamUser.Arn
            Action:
              - 'sts:AssumeRole'
  InfraPipeTfStateS3Bucket:
    Type: 'AWS::S3::Bucket'
    Properties:
      BucketName: !Sub 'tfstate-infrapipe-${InfraPipeEnv}-${AWS::AccountId}'
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      VersioningConfiguration:
        Status: Enabled
      PublicAccessBlockConfiguration:
        BlockPublicAcls: TRUE
        BlockPublicPolicy: TRUE
        IgnorePublicAcls: TRUE
        RestrictPublicBuckets: TRUE
  InfraPipeSSMParamS3BucketName:
    Type: 'AWS::SSM::Parameter'
    Properties:
      Description: Name of the S3 bucket storing Terraform state
      Name: !Sub '/${InfraPipeSsmPath}/${InfraPipeEnv}/AWS_TFSTATE_S3_BUCKET'
      Type: String
      Value: !Ref InfraPipeTfStateS3Bucket
  InfraPipeSSMParamS3BucketKey:
    Type: 'AWS::SSM::Parameter'
    Properties:
      Description: Key of the S3 bucket storing Terraform state
      Name: !Sub '/${InfraPipeSsmPath}/${InfraPipeEnv}/AWS_TFSTATE_S3_KEY'
      Type: String
      Value: terraform.tfstate
  InfraPipeSSMParamPipelineRole:
    Type: 'AWS::SSM::Parameter'
    Properties:
      Description: Name of Pipeline IAM Role
      Name: !Sub '/${InfraPipeSsmPath}/${InfraPipeEnv}/AWS_ASSUME_ROLE_ARN'
      Type: String
      Value: !GetAtt InfraPipeIamRole.Arn
