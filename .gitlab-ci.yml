image: docker:latest

services:
  - docker:stable-dind  

variables:
  DOCKER_DRIVER: overlay2
  # Use TLS https://docs.gitlab.com/ee/ci/docker/using_docker_build.html#tls-enabled
  DOCKER_HOST: tcp://docker:2376
  DOCKER_TLS_CERTDIR: "/certs"

stages:
  - build
  - push-tags
  - test
  
docker-build:
  only:
    refs:
      - branches
    changes:
      - Dockerfile
      - bin/*
      - .gitlab-ci.yml
  variables:
    DOCKERFILE: "Dockerfile"
  stage: build
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker pull $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA || true
    - docker build --cache-from $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA --tag $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA -f $DOCKERFILE .
    - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA
    - docker tag  $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME
    - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME

push-tags:
  only:
    - tags
  stage: push-tags
  script:
    - docker pull $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA
    - docker tag  $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME
    - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME

test-image:
  image: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME
  stage: test
  script:
    - cat $HOME/.profile
    - |
      [ "$(command -v nvm)" ] && nvm --version
    - |
      [ "$(command -v nvm)" ] && nvm current
    - |
      [ "$(command -v npm)" ] && npm --version
    - |
      [ "$(command -v node)" ] && node --version
    - |
      [ "$(command -v yarn)" ] && yarn --version
    - |
      [ "$(command -v python)" ] && python --version
    - |
      [ "$(command -v python3)" ] && python3 --version
    - |
      [ "$(command -v pip)" ] && pip --version
    - |
      [ "$(command -v pip3)" ] && pip3 --version
    - |
      [ "$(command -v pipenv)" ] && pipenv --version
    - |
      [ "$(command -v java)" ] && java -version
    - |
      [ "$(command -v mvn)" ] && mvn -version
    - |
      [ "$(command -v snyk)" ] && snyk --version
    - |
      [ "$(command -v sonar-scanner)" ] && sonar-scanner --version
    - |
      [ "$(command -v terraform)" ] && terraform --version
    - |
      [ "$(command -v aws)" ] && aws --version
    - |
      [ "$(command -v docker)" ] && docker --version && docker info


